// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from demo.djinni

#include "NativeLoginCore.hpp"  // my header
#include "Marshal.hpp"
#include "NativeLoginListener.hpp"

namespace djinni_generated {

NativeLoginCore::NativeLoginCore() : ::djinni::JniInterface<::demo::LoginCore, NativeLoginCore>("com/wechat/clibs/LoginCore$CppProxy") {}

NativeLoginCore::~NativeLoginCore() = default;


CJNIEXPORT void JNICALL Java_com_wechat_clibs_LoginCore_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<::djinni::CppProxyHandle<::demo::LoginCore>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jobject JNICALL Java_com_wechat_clibs_LoginCore_00024CppProxy_create(JNIEnv* jniEnv, jobject /*this*/, jobject j_listener)
{
    try {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        auto r = ::demo::LoginCore::create(::djinni_generated::NativeLoginListener::toCpp(jniEnv, j_listener));
        return ::djinni::release(::djinni_generated::NativeLoginCore::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT void JNICALL Java_com_wechat_clibs_LoginCore_00024CppProxy_native_1userLogin(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_account, jstring j_password)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::demo::LoginCore>(nativeRef);
        ref->user_login(::djinni::String::toCpp(jniEnv, j_account),
                        ::djinni::String::toCpp(jniEnv, j_password));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_wechat_clibs_LoginCore_00024CppProxy_native_1userSign(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jstring j_account, jstring j_password)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::demo::LoginCore>(nativeRef);
        ref->user_sign(::djinni::String::toCpp(jniEnv, j_account),
                       ::djinni::String::toCpp(jniEnv, j_password));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_wechat_clibs_LoginCore_00024CppProxy_native_1userLogout(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::demo::LoginCore>(nativeRef);
        ref->user_logout();
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_wechat_clibs_LoginCore_00024CppProxy_native_1checkLoginStatus(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::demo::LoginCore>(nativeRef);
        ref->check_login_status();
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_com_wechat_clibs_LoginCore_00024CppProxy_native_1checkConnection(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::demo::LoginCore>(nativeRef);
        ref->check_connection();
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

}  // namespace djinni_generated
