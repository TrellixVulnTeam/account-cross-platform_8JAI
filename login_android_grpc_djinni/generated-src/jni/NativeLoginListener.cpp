// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from demo.djinni

#include "NativeLoginListener.hpp"  // my header
#include "Marshal.hpp"

namespace djinni_generated {

NativeLoginListener::NativeLoginListener() : ::djinni::JniInterface<::demo::LoginListener, NativeLoginListener>() {}

NativeLoginListener::~NativeLoginListener() = default;

NativeLoginListener::JavaProxy::JavaProxy(JniType j) : Handle(::djinni::jniGetThreadEnv(), j) { }

NativeLoginListener::JavaProxy::~JavaProxy() = default;

void NativeLoginListener::JavaProxy::on_login_finish(int32_t c_code) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeLoginListener>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_onLoginFinish,
                           ::djinni::get(::djinni::I32::fromCpp(jniEnv, c_code)));
    ::djinni::jniExceptionCheck(jniEnv);
}
void NativeLoginListener::JavaProxy::on_sign_finish(int32_t c_code) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeLoginListener>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_onSignFinish,
                           ::djinni::get(::djinni::I32::fromCpp(jniEnv, c_code)));
    ::djinni::jniExceptionCheck(jniEnv);
}
void NativeLoginListener::JavaProxy::on_logout_finish(int32_t c_code) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeLoginListener>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_onLogoutFinish,
                           ::djinni::get(::djinni::I32::fromCpp(jniEnv, c_code)));
    ::djinni::jniExceptionCheck(jniEnv);
}
void NativeLoginListener::JavaProxy::on_check_status_finish(int32_t c_code, const std::string & c_account) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeLoginListener>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_onCheckStatusFinish,
                           ::djinni::get(::djinni::I32::fromCpp(jniEnv, c_code)),
                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c_account)));
    ::djinni::jniExceptionCheck(jniEnv);
}
void NativeLoginListener::JavaProxy::on_disconnect() {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeLoginListener>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_onDisconnect);
    ::djinni::jniExceptionCheck(jniEnv);
}
void NativeLoginListener::JavaProxy::toast(const std::string & c_content) {
    auto jniEnv = ::djinni::jniGetThreadEnv();
    ::djinni::JniLocalScope jscope(jniEnv, 10);
    const auto& data = ::djinni::JniClass<::djinni_generated::NativeLoginListener>::get();
    jniEnv->CallVoidMethod(Handle::get().get(), data.method_toast,
                           ::djinni::get(::djinni::String::fromCpp(jniEnv, c_content)));
    ::djinni::jniExceptionCheck(jniEnv);
}

}  // namespace djinni_generated
