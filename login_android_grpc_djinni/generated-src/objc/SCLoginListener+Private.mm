// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from demo.djinni

#import "SCLoginListener+Private.h"
#import "SCLoginListener.h"
#import "DJIMarshal+Private.h"
#import "DJIObjcWrapperCache+Private.h"
#include <stdexcept>

static_assert(__has_feature(objc_arc), "Djinni requires ARC to be enabled for this file");

namespace djinni_generated {

class LoginListener::ObjcProxy final
: public ::demo::LoginListener
, private ::djinni::ObjcProxyBase<ObjcType>
{
    friend class ::djinni_generated::LoginListener;
public:
    using ObjcProxyBase::ObjcProxyBase;
    void on_login_finish(int32_t c_code) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() onLoginFinish:(::djinni::I32::fromCpp(c_code))];
        }
    }
    void on_sign_finish(int32_t c_code) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() onSignFinish:(::djinni::I32::fromCpp(c_code))];
        }
    }
    void on_logout_finish(int32_t c_code) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() onLogoutFinish:(::djinni::I32::fromCpp(c_code))];
        }
    }
    void on_check_status_finish(int32_t c_code, const std::string & c_account) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() onCheckStatusFinish:(::djinni::I32::fromCpp(c_code))
                                                                  account:(::djinni::String::fromCpp(c_account))];
        }
    }
    void on_disconnect() override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() onDisconnect];
        }
    }
    void toast(const std::string & c_content) override
    {
        @autoreleasepool {
            [djinni_private_get_proxied_objc_object() toast:(::djinni::String::fromCpp(c_content))];
        }
    }
};

}  // namespace djinni_generated

namespace djinni_generated {

auto LoginListener::toCpp(ObjcType objc) -> CppType
{
    if (!objc) {
        return nullptr;
    }
    return ::djinni::get_objc_proxy<ObjcProxy>(objc);
}

auto LoginListener::fromCppOpt(const CppOptType& cpp) -> ObjcType
{
    if (!cpp) {
        return nil;
    }
    return dynamic_cast<ObjcProxy&>(*cpp).djinni_private_get_proxied_objc_object();
}

}  // namespace djinni_generated
